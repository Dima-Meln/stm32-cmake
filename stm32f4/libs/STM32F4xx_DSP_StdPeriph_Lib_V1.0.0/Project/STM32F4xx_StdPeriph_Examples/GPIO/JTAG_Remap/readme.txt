/**
  @page GPIO_JTAG_Remap GPIO JTAG/SWD Remap example
  
  @verbatim
  ******************** (C) COPYRIGHT 2011 STMicroelectronics *******************
  * @file    GPIO/JTAG_Remap/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    30-September-2011
  * @brief   Description of the GPIO JTAG/SWD Remap example.
  ******************************************************************************
  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  ******************************************************************************
   @endverbatim

@par Example Description 

This example provides a short description of how to use the JTAG/SWD IOs as standard 
GPIOs and gives a configuration sequence. 

Note that once the JTAG/SWD IOs are disabled, the connection with the host debugger is
lost and cannot be re-established as long as the JTAG/SWD IOs remain disabled. 
To avoid this situation, the Key push-button is used to disable or not the JTAG/SWD IOs:
 1. Key push-button maintained pressed at reset: JTAG/SWD IOs disabled and LED1 turned ON
 2. Key push-button not pressed at reset: JTAG/SWD IOs unchanged and LED2 turned ON

Before starting this example, you should disconnect your JTAG/SWD probe and run 
the example in stand-alone mode.


@par Directory contents 

  - GPIO/JTAG_Remap/system_stm32f4xx.c   STM32F4xx system clock configuration file
  - GPIO/JTAG_Remap/stm32f4xx_conf.h     Library Configuration file
  - GPIO/JTAG_Remap/stm32f4xx_it.c       Interrupt handlers
  - GPIO/JTAG_Remap/stm32f4xx_it.h       Header for stm32f4xx_it.c
  - GPIO/JTAG_Remap/main.c               Main program

  
@note The "system_stm32f4xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F4xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN3988 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>

      
@par Hardware and Software environment 

  - This example runs on STM32F4xx Devices.
  
  - This example has been tested with STM324xG-EVAL RevB and can be easily tailored
    to any other development board

  - STM324xG-EVAL Set-up  
    - Use LED1 and LED2 connected respectively to PG.06 and PG.08
    - Use the Key push-button connected to pin PG15 (EXTI Line15)


@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F4xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example
   
 * <h3><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h3>
 */
