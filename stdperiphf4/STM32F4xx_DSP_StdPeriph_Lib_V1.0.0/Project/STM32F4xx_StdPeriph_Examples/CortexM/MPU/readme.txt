/**
  @page CortexM4_MPU CortexM4 MPU example
  
  @verbatim
  ******************** (C) COPYRIGHT 2011 STMicroelectronics *******************
  * @file    CortexM4/MPU/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    30-September-2011
  * @brief   Description of the CortexM4 MPU example.
  ******************************************************************************
  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  ******************************************************************************
   @endverbatim

@par Example Description 

This example presents the MPU features on STM32F4xx devices and it can be easily
ported to any other STM32 device supporting MPU.

The example purpose is to configure a memory region as privileged read only region
and tries to perform read and write operation in different mode.

If the access is permitted LED1 is toggling. If the access is not permitted, 
a memory management fault is generated and LED2 is ON.
To generate an MPU memory fault exception due to an access right error, uncomment
the following line "PrivilegedReadOnlyArray[0] = 'e';" in the "stm32_mpu.c" file.


@par Directory contents 

  - CortexM4/MPU/stm32f4xx_conf.h     Library Configuration file
  - CortexM4/MPU/stm32f4xx_it.c       Interrupt handlers
  - CortexM4/MPU/stm32f4xx_it.h       Header for stm32f4xx_it.c 
  - CortexM4/MPU/main.c               Main program
  - CortexM4/MPU/system_stm32f4xx.c   STM32F4xx system source file
  - CortexM4/MPU/stm32_mpu.c          Cortex-M3 MPU regions Access rights file
      
@note The "system_stm32f4xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F4xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN3988 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>



@par Hardware and Software environment
  
  - This example runs on STM32F4xx Devices.

  - This example has been tested with STM324xG-EVAL RevB and can be easily tailored
    to any other development board


@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F4xx_StdPeriph_Templates
 - Open your preferred toolchain and setup your project configuration as follows
 - Add the required example files
   - stm32_mpu.c
<ul>
- For RIDE and TrueSTUDIO toolchains you have to follow these instructions

    <li> RIDE 
        - In the Application options -> script menu, set "Use Default Script File" 
          to "No" and use "stm32F_flash_ROAarray.ld" as Script File. 
          This linker is configured for STM32F4xx. It should be updated to use it
          with other STM32 devices.      
        

    <li> TrueSTUDIO 
          - In the project properties window, select C/C++ Build->settings node then 
           the C Linker->General node and use "stm32F_flash_ROAarray.ld" as Script File.
          This linker is configured for STM32F4xx. It should be updated to use it
          with other STM32 devices.         
</ul>    
 
 - Rebuild all files and load your image into target memory
 - Run the example


    
 * <h3><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h3>
 */
