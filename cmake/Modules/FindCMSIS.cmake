IF(NOT STM32_CHIP_TYPE)
    MESSAGE(FATAL_ERROR "Select your stm32 chip using STM32_CHIP_TYPE variable. (HD, HD_VL, MD, MD_VL, LD, LD_VL, XD, CL)")
ENDIF()

IF(STM32_CHIP_TYPE STREQUAL "HD")
    SET(CMSIS_LIB_NAME cmsis_hd)
    SET(CMSIS_STARTUP_NAME startup_stm32f10x_hd.s)
    SET(STM32_CHIP_DEF "-DSTM32F10X_HD")
ELSEIF(STM32_CHIP_TYPE STREQUAL "HD_VL")
    SET(CMSIS_LIB_NAME cmsis_hd_vl)
    SET(CMSIS_STARTUP_NAME startup_stm32f10x_hd_vl.s)
    SET(STM32_CHIP_DEF "-DSTM32F10X_HD_VL")
ELSEIF(STM32_CHIP_TYPE STREQUAL "MD")
    SET(CMSIS_LIB_NAME cmsis_md)
    SET(CMSIS_STARTUP_NAME startup_stm32f10x_md.s)
    SET(STM32_CHIP_DEF "-DSTM32F10X_MD")
ELSEIF(STM32_CHIP_TYPE STREQUAL "MD_VL")
    SET(CMSIS_LIB_NAME cmsis_md_vl)
    SET(CMSIS_STARTUP_NAME startup_stm32f10x_md_vl.s)
    SET(STM32_CHIP_DEF "-DSTM32F10X_MD_VL")
ELSEIF(STM32_CHIP_TYPE STREQUAL "LD")
    SET(CMSIS_LIB_NAME cmsis_ld)
    SET(CMSIS_STARTUP_NAME startup_stm32f10x_ld.s)
    SET(STM32_CHIP_DEF "-DSTM32F10X_LD")
ELSEIF(STM32_CHIP_TYPE STREQUAL "LD_VL")
    SET(CMSIS_LIB_NAME cmsis_ld_vl)
    SET(CMSIS_STARTUP_NAME startup_stm32f10x_ld_vl.s)
    SET(STM32_CHIP_DEF "-DSTM32F10X_LD_VL")
ELSEIF(STM32_CHIP_TYPE STREQUAL "XD")
    SET(CMSIS_LIB_NAME cmsis_xd)
    SET(CMSIS_STARTUP_NAME startup_stm32f10x_xd.s)
    SET(STM32_CHIP_DEF "-DSTM32F10X_XD")
ELSEIF(STM32_CHIP_TYPE STREQUAL "CL")
    SET(CMSIS_LIB_NAME cmsis_cl)
    SET(CMSIS_STARTUP_NAME startup_stm32f10x_cl.s)
    SET(STM32_CHIP_DEF "-DSTM32F10X_CL")
ELSE()
    MESSAGE(FATAL_ERROR "Invalid stm32 chip type.")
ENDIF()

FIND_PATH(CMSIS_INCLUDE_DIR system_stm32f10x.h core_cm3.h stm32f10x.h 
    PATH_SUFFIXES include stm32
)

FIND_LIBRARY(CMSIS_LIBRARIES
    NAMES ${CMSIS_LIB_NAME}
    PATH_SUFFIXES lib
)

FIND_FILE(CMSIS_STARTUP_SOURCE
    ${CMSIS_STARTUP_NAME}
    PATHS ${CMAKE_FIND_ROOT_PATH}/share/cmsis/
)

FIND_FILE(CMSIS_LINKER_SCRIPT
    stm32_flash.ld.in
    PATHS ${CMAKE_FIND_ROOT_PATH}/share/cmsis/
)

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(CMSIS DEFAULT_MSG CMSIS_LIBRARIES CMSIS_INCLUDE_DIR CMSIS_STARTUP_SOURCE CMSIS_LINKER_SCRIPT) 

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${STM32_CHIP_DEF}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${STM32_CHIP_DEF}")

FUNCTION(STM32_SET_PARAMS FLASH_SIZE RAM_SIZE STACK_ADDRESS MIN_STACK_SIZE MIN_HEAP_SIZE EXT_RAM_SIZE FLASH_ORIGIN RAM_ORIGIN EXT_RAM_ORIGIN)
    CONFIGURE_FILE(${CMSIS_LINKER_SCRIPT} ${CMAKE_CURRENT_BINARY_DIR}/stm32_flash.ld)
ENDFUNCTION(STM32_SET_PARAMS)

FUNCTION(STM32_SET_PARAMS FLASH_SIZE RAM_SIZE STACK_ADDRESS)
    SET(STACK_ADDRESS ${STACK_ADDRESS})
    SET(FLASH_SIZE ${FLASH_SIZE})
    SET(RAM_SIZE ${RAM_SIZE})
    SET(MIN_STACK_SIZE "0x200")
    SET(MIN_HEAP_SIZE "0")
    SET(EXT_RAM_SIZE "0K")
    SET(FLASH_ORIGIN "0x08000000")
    SET(RAM_ORIGIN "0x20000000")
    SET(EXT_RAM_ORIGIN "0x60000000")
    CONFIGURE_FILE(${CMSIS_LINKER_SCRIPT} ${CMAKE_CURRENT_BINARY_DIR}/stm32_flash.ld)
ENDFUNCTION(STM32_SET_PARAMS)